---
- name: Wait for SSH port
  hosts: tag_proxies
  gather_facts: false
  tasks:
    - name: Wait for new SSH port
      delegate_to: localhost
      wait_for:
        delay: 1
        port: "{{ ssh_port }}"
        timeout: 180
        state: started
        host: "{{ ansible_host }}"

- name: Configure Proxy Server
  hosts: tag_proxies
  gather_facts: false
  tasks:
    - name: Install Squid
      apt:
        name: squid
        update_cache: yes

    - name: Configure Squid
      template:
        src: templates/squid.conf.j2
        dest: /etc/squid/squid.conf

    - name: Install apache2-utils for htpasswd
      apt:
        name: apache2-utils
        state: present

    - name: Create auth file
      shell: |
        htpasswd -bc /etc/squid/passwd morph '{{ proxy_password }}'
        chown proxy:proxy /etc/squid/passwd
        chmod 640 /etc/squid/passwd

    - name: restart squid
      service:
        name: squid
        state: restarted

    - name: Wait for new proxy port
      wait_for:
        port: "{{ proxy_port }}"
        timeout: 180
        state: started

    - name: Install security packages
      apt:
        name:
          - fail2ban
          - ufw
          - auditd
        state: present

    - name: Configure SSH security
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        validate: '/usr/sbin/sshd -t -f %s'
      loop:
        - {regexp: '^#?PermitRootLogin', line: 'PermitRootLogin no'}
        - {regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no'}
        - {regexp: '^#?MaxAuthTries', line: 'MaxAuthTries 3'}
        - {regexp: '^#?LoginGraceTime', line: 'LoginGraceTime 30'}

    - name: Add sudo group to allowed SSH users
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "AllowGroups sudo"
        insertbefore: "^PermitRootLogin"

    - name: Configure fail2ban for squid
      copy:
        dest: /etc/fail2ban/jail.d/squid.conf
        content: |
          [squid]
          enabled = true
          filter = squid
          logpath = /var/log/squid/access.log
          maxretry = 3
          findtime = 600
          bantime = 3600

    - name: Configure UFW
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "{{ ssh_port }}"
        - "{{ proxy_port }}"

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny

    # Add to update.yml tasks:
    - name: Create handyman user
      user:
        name: "{{ provision_user }}"
        shell: /bin/bash
        groups: sudo
        append: yes

    - name: Set up SSH for handyman
      authorized_key:
        user: "{{ provision_user }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_ed25519.pub', errors='ignore') or lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Allow handyman sudo without password
      lineinfile:
        path: /etc/sudoers.d/handyman
        line: "handyman ALL=(ALL) NOPASSWD:ALL"
        create: yes
        mode: '0440'
        validate: 'visudo -cf %s'

    - name: Install unattended-upgrades
      apt:
        name: unattended-upgrades
        state: present
        update_cache: yes

    - name: Enable unattended-upgrades
      copy:
        content: |
          APT::Periodic::Update-Package-Lists "1";
          APT::Periodic::Unattended-Upgrade "1";
        dest: /etc/apt/apt.conf.d/20auto-upgrades

    - name: Configure unattended-upgrades
      command: dpkg-reconfigure -f noninteractive unattended-upgrades

    - name: Run unattended-upgrades
      command: "unattended-upgrade || echo Ignored failure"

    - name: 'Initiate Reboot without waiting - forces updated ssh to be used'
      shell: 'sleep 1 && reboot -f && sleep 1'
      async: 1
      poll: 0
