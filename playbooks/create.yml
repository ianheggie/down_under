# create.yml
---
- name: Create Australian Proxy
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/localhost.yml
    - ../group_vars/all
  tasks:
    - name: Create Linode instance
      linode.cloud.instance:
        api_token: "{{ lookup('env', 'LINODE_API_TOKEN') }}"
        label: "{{ instance_name }}"
        tags: ["proxies"]
        type: "{{ linode_type }}"
        region: "{{ region }}"
        image: "linode/ubuntu22.04"
        root_pass: "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
        authorized_keys:
          - "{{ lookup('file', '~/.ssh/id_ed25519.pub', errors='ignore') or lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present
      register: linode

    - name: Set proxy IP
      set_fact:
        proxy_ip: "{{ linode.instance.ipv4[0] }}"

    - name: Add host to inventory
      add_host:
        name: "{{ instance_name }}"
        groups: tag_proxies
        ansible_host: "{{ proxy_ip }}"
        ansible_user: root
        ansible_ssh_common_args: '-o StrictHostKeyChecking=accept-new'

    - name: Update DNS record
      linode.cloud.domain_record:
        api_token: "{{ lookup('env', 'LINODE_API_TOKEN') }}"
        domain: "{{ proxy_domain }}"
        type: "A"
        name: "{{ instance_name }}"
        target: "{{ proxy_ip }}"
        ttl_sec: 300
        state: present

    - name: Wait for SSH
      wait_for:
        host: "{{ proxy_ip }}"
        port: 22
        delay: 10
        timeout: 300
        search_regex: OpenSSH

- name: Configure SSH server
  hosts: "{{ instance_name }}"
  become: true
  tasks:
    - name: Configure SSH on custom port
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?Port '
        line: "Port {{ ssh_port }}"
        validate: '/usr/sbin/sshd -t -f %s'
      notify: restart ssh

    - name: Wait for custom SSH port
      wait_for:
        port: "{{ ssh_port }}"
        state: started
        timeout: 30

    - name: restart ssh
      service:
        name: ssh
        state: restarted

- name: Configure proxy server
  hosts: "{{ instance_name }}"
  become: true
  tasks:
    - name: Create local user
      user:
        name: "{{ lookup('env', 'USER') }}"
        shell: /bin/bash
        groups: sudo
        append: yes

    - name: Copy local user SSH key
      ansible.posix.authorized_key:
        user: "{{ lookup('env', 'USER') }}"
        key: "{{ lookup('file', '~/.ssh/id_ed25519.pub', errors='ignore') or lookup('file', '~/.ssh/id_rsa.pub') }}"
        state: present

    - name: Install Squid
      apt:
        name: squid
        update_cache: yes

    - name: Configure Squid
      template:
        src: ../templates/squid.conf.j2
        dest: /etc/squid/squid.conf
      notify: restart squid

    - name: Create auth file
      htpasswd:
        path: /etc/squid/passwd
        name: morph
        password: "{{ proxy_password }}"
        owner: proxy
        group: proxy
        mode: '0640'
      notify: restart squid

  handlers:
    - name: restart squid
      service:
        name: squid
        state: restarted
